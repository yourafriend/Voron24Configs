##########################################################################################
#
# This is an advanced "poop" for AFC
# This relies on the hardware to add a A1 mini purge wiper - https://uk.store.bambulab.com/products/purge-wiper-a1-series
#
# This is designed to be compatable with bed movers and flying gantries
#  
#
###################################### DISCLAIMER ########################################

# While I hope these works for you. These scripts could cause issues. Please ensure you run safely with safe numbers

##########################################################################################

# Big thanks to https://github.com/Dendrowen/Blobifier for a lot of the original code for this.


##########################################################################################
#
[gcode_macro POOPER]
# These parameters define your filament purging.
variable_purge_spd: 600                 # Speed, in mm/min, of the purge.
variable_purge_temp_min: 200            # Minimum nozzle purge temperature.
variable_toolhead_x: 35                 # From the nozzle to the left of your toolhead
variable_toolhead_y: 30                 # From the nozzle to the front of your toolhead
variable_retract_before_park:    3.0     # amount in mm. 0 to disable
variable_retract_speed:       2000       # mm/m


##custom
variable_retracted_length:  0.4	# Amount of current retraction


# These parameters define your scrubbing, travel speeds, safe z clearance and how many
# times you want to wipe. Update as necessary.
variable_clearance_z:           2          # When traveling, but not cleaning, the
                                           #   clearance along the z-axis between nozzle
                                           #   and brush.
variable_wipe_qty:              4          # Number of complete (A complete wipe: left,
                                           #   right, left OR right, left, right) wipes.
variable_travel_spd_xy:      25000
#variable_travel_spd_xy:      25000          # Travel (not cleaning) speed along x and
                                           #   y-axis in mm/min.
variable_travel_spd_z:       2000          # Travel (not cleaning) speed along z axis
                                           #   in mm/min.
variable_wipe_spd_xy: 30000          # Nozzle wipe speed in mm/min.

# The acceleration to use when using the brush action. If set to 0, it uses the already 
# set acceleration. However, in some cases this is not desirable for the last motion 
# could be an 'outer contour' acceleration which is usually lower.
variable_brush_accel: 10000

# Pooper sends the toolhead to the maximum y position during purge oeprations and
# minimum x position during shake operations. This can cause issues when skew correction 
# is set up. If you have skew correction enabled and get 'move out of range' errors 
# regarding pooper while skew is enabled, try increasing this value. Keep the 
# adjustments small though! (0.1mm - 0.5mm) and increase it until it works.
variable_skew_correction: 0.1

# These parameters define the size of the brush. Update as necessary. A visual reference
# is provided below.
#
#                  ←   brush_width   →
#                   _________________
#                  |                 |  ↑                Y position is acquired from your
#  brush_start (x) |                 | brush_depth       stepper_y position_max. Adjust
#                  |_________________|  ↓                your brush physically in Y so
#                          (y)                           that the nozzle scrubs within the
#                      brush_front                       brush.
# __________________________________________________________
#                     PRINTER FRONT
#
#
# Start location of the brush. Defaults for 250, 300 and 350mm are provided below.
# Uncomment as necessary
#variable_brush_start:          34  # For 250mm build
#variable_brush_start:          45  # For 300mm build
variable_brush_start:          41 #84  # for 350mm build
# width of the brush
variable_brush_width: 28
# Location of where to purge. This should be enough to engage the wiper enough.
variable_purge_x: 24

# ========================================================================================
# ==================== WIPER TUNING =======================================================
# ========================================================================================





# Dwell time (ms) after purging and before cleaning to relieve pressure from the nozzle.
variable_pressure_release_time: 2000

# Set the part cooling fan speed. Disabling can help prevent the nozzle from cooling down 
# and stimulate flow, Enabling it can prevent poops from sticking together. Values range 
# from 0 .. 1, or -1 if you don't want it changed.
#variable_part_cooling_fan: -1              # Leave it unchanged
#variable_part_cooling_fan:  0              # Disable the fan
#variable_part_cooling_fan:  1               # Run it at full speed
variable_part_cooling_fan:  1  



# ========================================================================================
# ==================== PURGE LENGTH TUNING ===============================================
# ========================================================================================

# The absolute minimum to purge, even if you don't changed tools. This is to prime the 
# nozzle before printing
variable_purge_length_minimum: 50

# The maximum amount of filament (in mm¹) to purge in a single poop. POOPER will 
# automatically purge multiple poops if the purge amount exeeds this.
variable_purge_length_maximum: 70

# Default purge length to fall back on when neither the tool map purge_volumes or 
# parameter PURGE_LENGTH is set.
variable_purge_length: 70

# The slicer values often are a bit too wastefull. Tune it here to get optimal values. 
# 0.6 (60%) is a good starting point.
variable_purge_length_modifier: 0.65


# When should you alter this value:
#   INCREASE: When the dark to light swaps are good, but light to dark aren't.
#   DECREASE: When the light to dark swaps are good, but dark to light aren't. Don't 
#     forget to increase the purge_length_modifier
variable_purge_length_addition: 35

gcode:
  # ======================================================================================
  # ==================== RECORD STATE (INCL. FANS, SPEEDS, ETC...) =======================
  # ======================================================================================

  # General state
  SAVE_GCODE_STATE NAME=POOPER_state

 
  # ======================================================================================
  # ==================== CHECK HOMING STATUS =============================================
  # ======================================================================================
  
  {% if "xyz" not in printer.toolhead.homed_axes %}
    RESPOND MSG="POOPER: Not homed! Home your printer before pooping"
  #{% elif printer.quad_gantry_level and printer.quad_gantry_level.applied == False %}
    #RESPOND MSG="POOPER: QGL not applied! run quad_gantry_level before pooping"
  {% else %}
    
    # Part cooling fan
    {% if part_cooling_fan >= 0 %}
      # Save the part cooling fan speed to be enabled again later
      {% set backup_fan_speed = printer.fan.speed %}
      # Set part cooling fan speed
      M106 S{part_cooling_fan * 255}
    {% endif %}

    # Set feedrate to 100% for correct speed purging
    {% set backup_feedrate = printer.gcode_move.speed_factor %}
    M220 S100

    # ======================================================================================
    # ==================== DEFINE BASIC VARIABLES ==========================================
    # ======================================================================================
    
    {% set park_vars = printer['gcode_macro POOPER_PARK'] %}
    {% set filament_diameter = printer.configfile.config.extruder.filament_diameter|float %}
    {% set filament_cross_section = (filament_diameter/2) ** 2 * 3.1415 %}
    {% set tp_count = printer['gcode_macro _POOPER_COUNT'] %}
    {% set pos = printer.gcode_move.gcode_position %}
    {% set restore_z = [printer['gcode_macro POOPER_PARK'].restore_z,pos.z]|max %}
    {% set pos_max = printer.toolhead.axis_maximum %}
    {% set position_y = pos_max.y - skew_correction %}
    {% set tp = printer['gcode_macro POOPER'] %}
    {% set travel_to_purge_xy = travel_spd_xy * 0.2 %}

    # ======================================================================================
    # ==================== DETERMINE PURGE LENGTH ==========================================
    # ======================================================================================

    {% if params.PURGE_LENGTH %} # =============== PARAM PURGE LENGTH ======================
      {action_respond_info("POOPER: param PURGE_LENGTH provided")}
      {% set purge_len = params.PURGE_LENGTH|float %}
    {% else %} # ========================= USE CONFIG DEFAULT LENGTH =============================
      {action_respond_info("POOPER: No toolmap or PURGE_LENGTH. Using default")}
      {% set purge_len = purge_length|float + tp.retracted_length %}
    {% endif %}

    # # ==================================== APPLY PURGE MINIMUM =============================
    {% set purge_len = [purge_len,purge_length_minimum]|max|round(0, 'ceil')|int %}
    {action_respond_info("POOPER: Purging %dmm of filament" % (purge_len))}

    {% if params.PURGE_LENGTH %}
        {% set purge_len = params.PURGE_LENGTH|float %}
      {% else %} 
        {% set purge_len = purge_length %}
      {% endif %}
    
      # Apply purge minimum
    #{% set purge_len = [purge_len, purge_length_minimum]|max %}
    {% set purge_len = [purge_len,purge_length_minimum]|max|round(0, 'ceil')|int %}
    {action_respond_info("POOPER: Purging %dmm of filament" % (purge_len))}
    
    # ======================================================================================
    # ==================== PURGING SEQUENCE ================================================
    # ======================================================================================

    # Set to absolute positioning.
    G90

    # Check for purge length and purge if necessary.
    {% if purge_len|float > 0 %}

      # ====================================================================================
      # ==================== POSITIONING ===================================================
      # ====================================================================================
      
      # Move to the assembly, first a bit more to the right (brush_start) to avoid a 
      # potential filametrix pin if it's not already on the same Y coordinate.
      {% if printer.toolhead.position.y != position_y %}
        G1 X{brush_start} Y{position_y} F{travel_spd_xy}
      {% endif %}
      SET_TMC_CURRENT STEPPER=stepper_x CURRENT=1.0
      SET_TMC_CURRENT STEPPER=stepper_y CURRENT=1.0
      # Move over to the tray
      G1 X{purge_x} F{travel_to_purge_xy}
  

      # ====================================================================================
      # ==================== HEAT HOTEND ===================================================
      # ====================================================================================
      
      {% if printer.extruder.temperature < purge_temp_min %}
        {% if printer.extruder.target < purge_temp_min %}
          M109 S{purge_temp_min}
        {% else %}
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={purge_temp_min}
        {% endif %}
      {% endif %}

      # ====================================================================================
      # ==================== START ITERATING ===============================================
      # ====================================================================================
      
      # Calculate total number of iterations based on the purge length and the max_iteration 
      # length.
      {% set poops = (purge_len / purge_length_maximum)|round(0, 'ceil')|int %}
      {% set purge_per_poop = purge_len|float / poops %}
      {% set retracts_per_poop = (purge_per_poop / 40)|round(0, 'ceil')|int %}
      {% set purge_per_retract = (purge_per_poop / retracts_per_poop)|int %}
      {% set pulses_per_retract = (purge_per_poop / retracts_per_poop / 5)|round(0, 'ceil')|int %}
      {% set pulses_per_poop = (purge_per_poop / 20)|round(0, 'ceil')|int %}
      {% set purge_per_pulse = purge_per_poop / pulses_per_poop %}
      {% set pulse_time_constant = purge_per_pulse * 0.95 / purge_spd / (purge_per_pulse * 0.95 / purge_spd + purge_per_pulse * 0.05 / 50) %}
      {% set travel_to_purge_xy = travel_spd_xy * 0.2 %}
      {% set deposit_speed = wipe_spd_xy * 0.3 %}
      
      # Repeat the process until purge_len is reached
      {% for poop in range(poops) %}
        RESPOND MSG={"'POOPER: Poop %d of %d (%.1fmm)'" % (poop + 1, poops, purge_per_poop)}

        G1 X{purge_x} F{travel_to_purge_xy}
        # relative positioning
        G91 
        # relative extrusion
        M83

        # Purge filament in a pulsating motion to purge the filament quicker and better
        {% for pulse in range(pulses_per_poop) %}
          # Calculations to determine z-speed
          {% set purged_this_poop = pulse * purge_per_pulse %}
          M106 S255 #full fan
          # Purge quickly
          G1  E{purge_per_pulse * 0.95} F{purge_spd}
          # Purge a tiny bit slowly
          G1  E{purge_per_pulse * 0.5} F{purge_spd}

          # retract and unretract filament every now and then for thourough cleaning
          {% if pulse % pulses_per_retract == 0 and pulse > 0 %}
            G1 E-2 F2500
            G1 E2 F1500
          {% endif %}
          
        {% endfor %}
        M106 S255 #full fan
        # Retract to match what AFC is expecting
        G1 E-{tp.retracted_length} F{tp.retract_speed * 60}
        
        # ==================================================================================
        # ==================== DEPOSIT poop ================================================
        # ==================================================================================
        G90
        M106 S255
        G4 P{pressure_release_time}
    
        G1 X{tp.brush_start} F{deposit_speed}
        G1 X{purge_x} F{travel_to_purge_xy}
        G1 X{tp.brush_start + tp.brush_width} F{wipe_spd_xy}
        #G1 X{tp.brush_start + tp.brush_width} F{wipe_spd_xy}
        {% endfor %}
    {% endif %}


    POOPER_CLEAN

    # ======================================================================================
    # ==================== RESTORE STATE ===================================================
    # ======================================================================================
    G90 # absolute positioning
    G1 Z{restore_z} F{travel_spd_z}
    
    {% if part_cooling_fan >= 0 %}
      # Reset part cooling fan if it was changed
      M106 S{(backup_fan_speed * 255)|int}
    {% endif %}
    
    M220 S{(backup_feedrate * 100)|int}
  {% endif %}
  
  RESTORE_GCODE_STATE NAME=POOPER_state 


##########################################################################################
# Wipes the nozzle on the brass brush
#
[gcode_macro POOPER_CLEAN]
gcode:
  {% set tp = printer['gcode_macro POOPER'] %}
  {% set position_y = 345|float %} #printer.configfile.config["stepper_y"]["position_max"]
  {% set original_accel = printer.toolhead.max_accel %}
  {% set original_minimum_cruise_ratio = printer.toolhead.minimum_cruise_ratio %}
  {% set pos = printer.gcode_move.gcode_position %}
  
  SAVE_GCODE_STATE NAME=POOPER_CLEAN_state

  G90
  
  {% if tp.brush_accel > 0 %}
    SET_VELOCITY_LIMIT ACCEL={tp.brush_accel} MINIMUM_CRUISE_RATIO=0.1
  {% endif %}

  G1 X{tp.brush_start} F{tp.travel_spd_xy}
  G1 Y{position_y}


  SET_VELOCITY_LIMIT ACCEL={original_accel} MINIMUM_CRUISE_RATIO={original_minimum_cruise_ratio}
  
  # Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
  {% for wipes in range(1, (tp.wipe_qty + 1)) %}
     G1 X{tp.brush_start + tp.brush_width} F{tp.wipe_spd_xy}
     G1 X{tp.brush_start} F{tp.wipe_spd_xy}
  {% endfor %}

  RESTORE_GCODE_STATE NAME=POOPER_CLEAN_state



##########################################################################################
# Park the nozzle on the tray to prevent oozing during filament swaps. Place this 
# extension in the post_form_tip extension in mmu_macro_vars.cfg:
#   variable_user_post_form_tip_extension: "POOPER_PARK"
#
[gcode_macro POOPER_PARK]
variable_restore_z: 0
gcode:
  {% set tp = printer['gcode_macro POOPER'] %}
  {% set pos = printer.gcode_move.gcode_position %}
  {% set pos_max = printer.toolhead.axis_maximum %}
  {% set position_y = pos_max.y - tp.skew_correction %}
  {% set travel_to_purge_xy = tp.travel_spd_xy * 0.2 %}

  SET_GCODE_VARIABLE MACRO=POOPER_PARK VARIABLE=restore_z VALUE={pos.z}

  SAVE_GCODE_STATE NAME=POOPER_park_state
  
  {% if "xyz" in printer.toolhead.homed_axes and printer.quad_gantry_level and printer.quad_gantry_level.applied %}
    G90

    G1 X{tp.brush_start} Y{position_y} F{tp.travel_spd_xy}
    G1 X{tp.purge_x} F{travel_to_purge_xy}
  {% else %}
    RESPOND MSG="Please home (and QGL) before parking"
  {% endif %}

  RESTORE_GCODE_STATE NAME=POOPER_park_state




##########################################################################################
# Some sanity checks
#
[delayed_gcode POOPER_INIT]
initial_duration: 5.0
gcode:
  _POOPER_INIT

[gcode_macro _POOPER_INIT]
gcode:
  {% set tp = printer['gcode_macro POOPER'] %}

  # Valid part cooling fan setting
  {% if tp.part_cooling_fan != -1 and (tp.part_cooling_fan < 0 or tp.part_cooling_fan > 1) %}
    {action_emergency_stop("POOPER: Value %f is invalid for variable part_cooling_fan. Either -1 or a value from 0 .. 1 is valid." % (tp.part_cooling_fan))}
  {% endif %}


[respond]

# [save_variables]
# filename: ~/printer_data/config/turtlepoop/poop_vars.cfg
